var Filter_1_1_0_Module_Factory = function () {
  var Filter_1_1_0 = {
    name: 'Filter_1_1_0',
    defaultElementNamespaceURI: 'http:\/\/www.opengis.net\/ogc',
    typeInfos: [{
        type: 'classInfo',
        localName: 'BinaryOperatorType',
        baseTypeInfo: 'Filter_1_1_0.ExpressionType',
        propertyInfos: [{
            name: 'expression',
            collection: true,
            elementName: 'expression',
            typeInfo: 'Filter_1_1_0.ExpressionType',
            type: 'elementRef'
          }]
      }, {
        type: 'classInfo',
        localName: 'ExpressionType',
        propertyInfos: []
      }, {
        type: 'classInfo',
        localName: 'BinarySpatialOpType',
        baseTypeInfo: 'Filter_1_1_0.SpatialOpsType',
        propertyInfos: [{
            name: 'rest',
            collection: true,
            elementTypeInfos: [{
                elementName: {
                  localPart: '_Geometry',
                  namespaceURI: 'http:\/\/www.opengis.net\/gml'
                },
                typeInfo: 'GML_3_1_1.AbstractGeometryType'
              }, {
                elementName: 'PropertyName',
                typeInfo: 'Filter_1_1_0.PropertyNameType'
              }, {
                elementName: {
                  localPart: 'Envelope',
                  namespaceURI: 'http:\/\/www.opengis.net\/gml'
                },
                typeInfo: 'GML_3_1_1.EnvelopeType'
              }],
            type: 'elementRefs'
          }]
      }, {
        type: 'classInfo',
        localName: 'SpatialOpsType',
        propertyInfos: []
      }, {
        type: 'classInfo',
        localName: 'BinaryLogicOpType',
        baseTypeInfo: 'Filter_1_1_0.LogicOpsType',
        propertyInfos: [{
            name: 'comparisonOpsOrSpatialOpsOrLogicOps',
            collection: true,
            elementTypeInfos: [{
                elementName: 'logicOps',
                typeInfo: 'Filter_1_1_0.LogicOpsType'
              }, {
                elementName: 'Function',
                typeInfo: 'Filter_1_1_0.FunctionType'
              }, {
                elementName: 'comparisonOps',
                typeInfo: 'Filter_1_1_0.ComparisonOpsType'
              }, {
                elementName: 'spatialOps',
                typeInfo: 'Filter_1_1_0.SpatialOpsType'
              }],
            type: 'elementRefs'
          }]
      }, {
        type: 'classInfo',
        localName: 'LogicOpsType',
        propertyInfos: []
      }, {
        type: 'classInfo',
        localName: 'BinaryComparisonOpType',
        baseTypeInfo: 'Filter_1_1_0.ComparisonOpsType',
        propertyInfos: [{
            name: 'expression',
            collection: true,
            elementName: 'expression',
            typeInfo: 'Filter_1_1_0.ExpressionType',
            type: 'elementRef'
          }, {
            name: 'matchCase',
            typeInfo: 'Boolean',
            attributeName: 'matchCase',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'ComparisonOpsType',
        propertyInfos: []
      }, {
        type: 'classInfo',
        localName: 'SortByType',
        propertyInfos: [{
            type: 'element',
            name: 'sortProperty',
            collection: true,
            elementName: 'SortProperty',
            typeInfo: 'Filter_1_1_0.SortPropertyType'
          }]
      }, {
        type: 'classInfo',
        localName: 'DistanceBufferType',
        baseTypeInfo: 'Filter_1_1_0.SpatialOpsType',
        propertyInfos: [{
            type: 'element',
            name: 'propertyName',
            elementName: 'PropertyName',
            typeInfo: 'Filter_1_1_0.PropertyNameType'
          }, {
            name: 'geometry',
            elementName: {
              localPart: '_Geometry',
              namespaceURI: 'http:\/\/www.opengis.net\/gml'
            },
            typeInfo: 'GML_3_1_1.AbstractGeometryType',
            type: 'elementRef'
          }, {
            type: 'element',
            name: 'distance',
            elementName: 'Distance',
            typeInfo: 'Filter_1_1_0.DistanceType'
          }]
      }, {
        type: 'classInfo',
        localName: 'GmlObjectIdType',
        baseTypeInfo: 'Filter_1_1_0.AbstractIdType',
        propertyInfos: [{
            name: 'id',
            typeInfo: 'ID',
            attributeName: {
              localPart: 'id',
              namespaceURI: 'http:\/\/www.opengis.net\/gml'
            },
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'AbstractIdType',
        propertyInfos: []
      }, {
        type: 'classInfo',
        localName: 'FunctionType',
        baseTypeInfo: 'Filter_1_1_0.ExpressionType',
        propertyInfos: [{
            name: 'expression',
            collection: true,
            elementName: 'expression',
            typeInfo: 'Filter_1_1_0.ExpressionType',
            type: 'elementRef'
          }, {
            name: 'name',
            typeInfo: 'String',
            attributeName: 'name',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'LiteralType',
        propertyInfos: [{
            name: 'content',
            collection: true,
            allowTypedObject: true,
            mixed: true,
            type: 'anyElement'
          }]
      }, {
        type: 'classInfo',
        localName: 'PropertyIsBetweenType',
        baseTypeInfo: 'Filter_1_1_0.ComparisonOpsType',
        propertyInfos: [{
            name: 'expression',
            elementName: 'expression',
            typeInfo: 'Filter_1_1_0.ExpressionType',
            type: 'elementRef'
          }, {
            type: 'element',
            name: 'lowerBoundary',
            elementName: 'LowerBoundary',
            typeInfo: 'Filter_1_1_0.LowerBoundaryType'
          }, {
            type: 'element',
            name: 'upperBoundary',
            elementName: 'UpperBoundary',
            typeInfo: 'Filter_1_1_0.UpperBoundaryType'
          }]
      }, {
        type: 'classInfo',
        localName: 'FilterCapabilities',
        propertyInfos: [{
            type: 'element',
            name: 'spatialCapabilities',
            elementName: 'Spatial_Capabilities',
            typeInfo: 'Filter_1_1_0.SpatialCapabilitiesType'
          }, {
            type: 'element',
            name: 'scalarCapabilities',
            elementName: 'Scalar_Capabilities',
            typeInfo: 'Filter_1_1_0.ScalarCapabilitiesType'
          }, {
            type: 'element',
            name: 'idCapabilities',
            elementName: 'Id_Capabilities',
            typeInfo: 'Filter_1_1_0.IdCapabilitiesType'
          }]
      }, {
        type: 'classInfo',
        localName: 'SpatialCapabilitiesType',
        propertyInfos: [{
            type: 'element',
            name: 'geometryOperands',
            elementName: 'GeometryOperands',
            typeInfo: 'Filter_1_1_0.GeometryOperandsType'
          }, {
            type: 'element',
            name: 'spatialOperators',
            elementName: 'SpatialOperators',
            typeInfo: 'Filter_1_1_0.SpatialOperatorsType'
          }]
      }, {
        type: 'classInfo',
        localName: 'ScalarCapabilitiesType',
        propertyInfos: [{
            type: 'element',
            name: 'logicalOperators',
            elementName: 'LogicalOperators',
            typeInfo: 'Filter_1_1_0.LogicalOperators'
          }, {
            type: 'element',
            name: 'comparisonOperators',
            elementName: 'ComparisonOperators',
            typeInfo: 'Filter_1_1_0.ComparisonOperatorsType'
          }, {
            type: 'element',
            name: 'arithmeticOperators',
            elementName: 'ArithmeticOperators',
            typeInfo: 'Filter_1_1_0.ArithmeticOperatorsType'
          }]
      }, {
        type: 'classInfo',
        localName: 'IdCapabilitiesType',
        propertyInfos: [{
            name: 'eidOrFID',
            collection: true,
            elementTypeInfos: [{
                elementName: 'EID',
                typeInfo: 'Filter_1_1_0.EID'
              }, {
                elementName: 'FID',
                typeInfo: 'Filter_1_1_0.FID'
              }],
            type: 'elements'
          }]
      }, {
        type: 'classInfo',
        localName: 'FID',
        propertyInfos: []
      }, {
        type: 'classInfo',
        localName: 'PropertyNameType',
        baseTypeInfo: 'Filter_1_1_0.ExpressionType',
        propertyInfos: []
      }, {
        type: 'classInfo',
        localName: 'EID',
        propertyInfos: []
      }, {
        type: 'classInfo',
        localName: 'PropertyIsLikeType',
        baseTypeInfo: 'Filter_1_1_0.ComparisonOpsType',
        propertyInfos: [{
            type: 'element',
            name: 'propertyName',
            elementName: 'PropertyName',
            typeInfo: 'Filter_1_1_0.PropertyNameType'
          }, {
            type: 'element',
            name: 'literal',
            elementName: 'Literal',
            typeInfo: 'Filter_1_1_0.LiteralType'
          }, {
            name: 'wildCard',
            typeInfo: 'String',
            attributeName: 'wildCard',
            type: 'attribute'
          }, {
            name: 'singleChar',
            typeInfo: 'String',
            attributeName: 'singleChar',
            type: 'attribute'
          }, {
            name: 'escapeChar',
            typeInfo: 'String',
            attributeName: 'escapeChar',
            type: 'attribute'
          }, {
            name: 'matchCase',
            typeInfo: 'Boolean',
            attributeName: 'matchCase',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'LogicalOperators',
        propertyInfos: []
      }, {
        type: 'classInfo',
        localName: 'SimpleArithmetic',
        propertyInfos: []
      }, {
        type: 'classInfo',
        localName: 'FeatureIdType',
        baseTypeInfo: 'Filter_1_1_0.AbstractIdType',
        propertyInfos: [{
            name: 'fid',
            typeInfo: 'ID',
            attributeName: 'fid',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'UnaryLogicOpType',
        baseTypeInfo: 'Filter_1_1_0.LogicOpsType',
        propertyInfos: [{
            name: 'comparisonOps',
            elementName: 'comparisonOps',
            typeInfo: 'Filter_1_1_0.ComparisonOpsType',
            type: 'elementRef'
          }, {
            name: 'spatialOps',
            elementName: 'spatialOps',
            typeInfo: 'Filter_1_1_0.SpatialOpsType',
            type: 'elementRef'
          }, {
            name: 'logicOps',
            elementName: 'logicOps',
            typeInfo: 'Filter_1_1_0.LogicOpsType',
            type: 'elementRef'
          }, {
            type: 'element',
            name: 'function',
            elementName: 'Function',
            typeInfo: 'Filter_1_1_0.FunctionType'
          }]
      }, {
        type: 'classInfo',
        localName: 'PropertyIsNullType',
        baseTypeInfo: 'Filter_1_1_0.ComparisonOpsType',
        propertyInfos: [{
            type: 'element',
            name: 'propertyName',
            elementName: 'PropertyName',
            typeInfo: 'Filter_1_1_0.PropertyNameType'
          }]
      }, {
        type: 'classInfo',
        localName: 'FilterType',
        propertyInfos: [{
            name: 'spatialOps',
            elementName: 'spatialOps',
            typeInfo: 'Filter_1_1_0.SpatialOpsType',
            type: 'elementRef'
          }, {
            name: 'comparisonOps',
            elementName: 'comparisonOps',
            typeInfo: 'Filter_1_1_0.ComparisonOpsType',
            type: 'elementRef'
          }, {
            name: 'logicOps',
            elementName: 'logicOps',
            typeInfo: 'Filter_1_1_0.LogicOpsType',
            type: 'elementRef'
          }, {
            name: 'id',
            collection: true,
            elementName: '_Id',
            typeInfo: 'Filter_1_1_0.AbstractIdType',
            type: 'elementRef'
          }]
      }, {
        type: 'classInfo',
        localName: 'BBOXType',
        baseTypeInfo: 'Filter_1_1_0.SpatialOpsType',
        propertyInfos: [{
            type: 'element',
            name: 'propertyName',
            elementName: 'PropertyName',
            typeInfo: 'Filter_1_1_0.PropertyNameType'
          }, {
            name: 'envelope',
            elementName: {
              localPart: 'Envelope',
              namespaceURI: 'http:\/\/www.opengis.net\/gml'
            },
            typeInfo: 'GML_3_1_1.EnvelopeType',
            type: 'elementRef'
          }]
      }, {
        type: 'classInfo',
        localName: 'FunctionNameType',
        propertyInfos: [{
            name: 'value',
            typeInfo: 'String',
            type: 'value'
          }, {
            name: 'nArgs',
            typeInfo: 'String',
            attributeName: 'nArgs',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'FunctionsType',
        propertyInfos: [{
            type: 'element',
            name: 'functionNames',
            elementName: 'FunctionNames',
            typeInfo: 'Filter_1_1_0.FunctionNamesType'
          }]
      }, {
        type: 'classInfo',
        localName: 'DistanceType',
        propertyInfos: [{
            name: 'value',
            typeInfo: 'Double',
            type: 'value'
          }, {
            name: 'units',
            typeInfo: 'String',
            attributeName: 'units',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'SpatialOperatorsType',
        propertyInfos: [{
            type: 'element',
            name: 'spatialOperator',
            collection: true,
            elementName: 'SpatialOperator',
            typeInfo: 'Filter_1_1_0.SpatialOperatorType'
          }]
      }, {
        type: 'classInfo',
        localName: 'GeometryOperandsType',
        propertyInfos: [{
            type: 'element',
            name: 'geometryOperand',
            collection: true,
            elementName: 'GeometryOperand',
            typeInfo: 'String'
          }]
      }, {
        type: 'classInfo',
        localName: 'SortPropertyType',
        propertyInfos: [{
            type: 'element',
            name: 'propertyName',
            elementName: 'PropertyName',
            typeInfo: 'Filter_1_1_0.PropertyNameType'
          }, {
            type: 'element',
            name: 'sortOrder',
            elementName: 'SortOrder',
            typeInfo: 'String'
          }]
      }, {
        type: 'classInfo',
        localName: 'SpatialOperatorType',
        propertyInfos: [{
            type: 'element',
            name: 'geometryOperands',
            elementName: 'GeometryOperands',
            typeInfo: 'Filter_1_1_0.GeometryOperandsType'
          }, {
            name: 'name',
            typeInfo: 'String',
            attributeName: 'name',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'FunctionNamesType',
        propertyInfos: [{
            type: 'element',
            name: 'functionName',
            collection: true,
            elementName: 'FunctionName',
            typeInfo: 'Filter_1_1_0.FunctionNameType'
          }]
      }, {
        type: 'classInfo',
        localName: 'ArithmeticOperatorsType',
        propertyInfos: [{
            name: 'simpleArithmeticOrFunctions',
            collection: true,
            elementTypeInfos: [{
                elementName: 'SimpleArithmetic',
                typeInfo: 'Filter_1_1_0.SimpleArithmetic'
              }, {
                elementName: 'Functions',
                typeInfo: 'Filter_1_1_0.FunctionsType'
              }],
            type: 'elements'
          }]
      }, {
        type: 'classInfo',
        localName: 'UpperBoundaryType',
        propertyInfos: [{
            name: 'expression',
            elementName: 'expression',
            typeInfo: 'Filter_1_1_0.ExpressionType',
            type: 'elementRef'
          }]
      }, {
        type: 'classInfo',
        localName: 'ComparisonOperatorsType',
        propertyInfos: [{
            type: 'element',
            name: 'comparisonOperator',
            collection: true,
            elementName: 'ComparisonOperator',
            typeInfo: 'String'
          }]
      }, {
        type: 'classInfo',
        localName: 'LowerBoundaryType',
        propertyInfos: [{
            name: 'expression',
            elementName: 'expression',
            typeInfo: 'Filter_1_1_0.ExpressionType',
            type: 'elementRef'
          }]
      }, {
        type: 'enumInfo',
        localName: 'SpatialOperatorNameType',
        baseTypeInfo: 'String',
        values: ['BBOX', 'Equals', 'Disjoint', 'Intersects', 'Touches', 'Crosses', 'Within', 'Contains', 'Overlaps', 'Beyond', 'DWithin']
      }, {
        type: 'enumInfo',
        localName: 'ComparisonOperatorType',
        baseTypeInfo: 'String',
        values: ['LessThan', 'GreaterThan', 'LessThanEqualTo', 'GreaterThanEqualTo', 'EqualTo', 'NotEqualTo', 'Like', 'Between', 'NullCheck']
      }, {
        type: 'enumInfo',
        localName: 'SortOrderType',
        baseTypeInfo: 'String',
        values: ['DESC', 'ASC']
      }],
    elementInfos: [{
        elementName: 'Filter_Capabilities',
        typeInfo: 'Filter_1_1_0.FilterCapabilities'
      }, {
        elementName: 'FID',
        typeInfo: 'Filter_1_1_0.FID'
      }, {
        elementName: 'EID',
        typeInfo: 'Filter_1_1_0.EID'
      }, {
        elementName: 'LogicalOperators',
        typeInfo: 'Filter_1_1_0.LogicalOperators'
      }, {
        elementName: 'SimpleArithmetic',
        typeInfo: 'Filter_1_1_0.SimpleArithmetic'
      }, {
        elementName: 'Mul',
        typeInfo: 'Filter_1_1_0.BinaryOperatorType',
        substitutionHead: 'expression'
      }, {
        elementName: 'Sub',
        typeInfo: 'Filter_1_1_0.BinaryOperatorType',
        substitutionHead: 'expression'
      }, {
        elementName: 'PropertyName',
        typeInfo: 'Filter_1_1_0.PropertyNameType',
        substitutionHead: 'expression'
      }, {
        elementName: 'PropertyIsLike',
        typeInfo: 'Filter_1_1_0.PropertyIsLikeType',
        substitutionHead: 'comparisonOps'
      }, {
        elementName: 'expression',
        typeInfo: 'Filter_1_1_0.ExpressionType'
      }, {
        elementName: 'logicOps',
        typeInfo: 'Filter_1_1_0.LogicOpsType'
      }, {
        elementName: 'PropertyIsGreaterThan',
        typeInfo: 'Filter_1_1_0.BinaryComparisonOpType',
        substitutionHead: 'comparisonOps'
      }, {
        elementName: 'PropertyIsLessThan',
        typeInfo: 'Filter_1_1_0.BinaryComparisonOpType',
        substitutionHead: 'comparisonOps'
      }, {
        elementName: 'Within',
        typeInfo: 'Filter_1_1_0.BinarySpatialOpType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: 'Contains',
        typeInfo: 'Filter_1_1_0.BinarySpatialOpType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: 'Filter',
        typeInfo: 'Filter_1_1_0.FilterType'
      }, {
        elementName: 'PropertyIsNotEqualTo',
        typeInfo: 'Filter_1_1_0.BinaryComparisonOpType',
        substitutionHead: 'comparisonOps'
      }, {
        elementName: 'BBOX',
        typeInfo: 'Filter_1_1_0.BBOXType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: 'And',
        typeInfo: 'Filter_1_1_0.BinaryLogicOpType',
        substitutionHead: 'logicOps'
      }, {
        elementName: 'Div',
        typeInfo: 'Filter_1_1_0.BinaryOperatorType',
        substitutionHead: 'expression'
      }, {
        elementName: 'FeatureId',
        typeInfo: 'Filter_1_1_0.FeatureIdType',
        substitutionHead: '_Id'
      }, {
        elementName: 'Equals',
        typeInfo: 'Filter_1_1_0.BinarySpatialOpType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: 'Not',
        typeInfo: 'Filter_1_1_0.UnaryLogicOpType',
        substitutionHead: 'logicOps'
      }, {
        elementName: 'PropertyIsNull',
        typeInfo: 'Filter_1_1_0.PropertyIsNullType',
        substitutionHead: 'comparisonOps'
      }, {
        elementName: 'Beyond',
        typeInfo: 'Filter_1_1_0.DistanceBufferType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: 'comparisonOps',
        typeInfo: 'Filter_1_1_0.ComparisonOpsType'
      }, {
        elementName: 'PropertyIsLessThanOrEqualTo',
        typeInfo: 'Filter_1_1_0.BinaryComparisonOpType',
        substitutionHead: 'comparisonOps'
      }, {
        elementName: 'SortBy',
        typeInfo: 'Filter_1_1_0.SortByType'
      }, {
        elementName: 'spatialOps',
        typeInfo: 'Filter_1_1_0.SpatialOpsType'
      }, {
        elementName: 'Add',
        typeInfo: 'Filter_1_1_0.BinaryOperatorType',
        substitutionHead: 'expression'
      }, {
        elementName: 'Overlaps',
        typeInfo: 'Filter_1_1_0.BinarySpatialOpType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: 'Or',
        typeInfo: 'Filter_1_1_0.BinaryLogicOpType',
        substitutionHead: 'logicOps'
      }, {
        elementName: 'Disjoint',
        typeInfo: 'Filter_1_1_0.BinarySpatialOpType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: 'Touches',
        typeInfo: 'Filter_1_1_0.BinarySpatialOpType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: 'PropertyIsBetween',
        typeInfo: 'Filter_1_1_0.PropertyIsBetweenType',
        substitutionHead: 'comparisonOps'
      }, {
        elementName: '_Id',
        typeInfo: 'Filter_1_1_0.AbstractIdType'
      }, {
        elementName: 'PropertyIsEqualTo',
        typeInfo: 'Filter_1_1_0.BinaryComparisonOpType',
        substitutionHead: 'comparisonOps'
      }, {
        elementName: 'DWithin',
        typeInfo: 'Filter_1_1_0.DistanceBufferType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: 'Literal',
        typeInfo: 'Filter_1_1_0.LiteralType',
        substitutionHead: 'expression'
      }, {
        elementName: 'Intersects',
        typeInfo: 'Filter_1_1_0.BinarySpatialOpType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: 'GmlObjectId',
        typeInfo: 'Filter_1_1_0.GmlObjectIdType',
        substitutionHead: '_Id'
      }, {
        elementName: 'PropertyIsGreaterThanOrEqualTo',
        typeInfo: 'Filter_1_1_0.BinaryComparisonOpType',
        substitutionHead: 'comparisonOps'
      }, {
        elementName: 'Function',
        typeInfo: 'Filter_1_1_0.FunctionType',
        substitutionHead: 'expression'
      }, {
        elementName: 'Crosses',
        typeInfo: 'Filter_1_1_0.BinarySpatialOpType',
        substitutionHead: 'spatialOps'
      }]
  };
  return {
    Filter_1_1_0: Filter_1_1_0
  };
};
if (typeof define === 'function' && define.amd) {
  define([], Filter_1_1_0_Module_Factory);
}
else {
  if (typeof module !== 'undefined' && module.exports) {
    module.exports.Filter_1_1_0 = Filter_1_1_0_Module_Factory().Filter_1_1_0;
  }
  else {
    var Filter_1_1_0 = Filter_1_1_0_Module_Factory().Filter_1_1_0;
  }
}