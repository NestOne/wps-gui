var Filter_2_0_Module_Factory = function () {
  var Filter_2_0 = {
    name: 'Filter_2_0',
    defaultElementNamespaceURI: 'http:\/\/www.opengis.net\/fes\/2.0',
    typeInfos: [{
        type: 'classInfo',
        localName: 'BinaryTemporalOpType',
        baseTypeInfo: 'Filter_2_0.TemporalOpsType',
        propertyInfos: [{
            type: 'element',
            name: 'valueReference',
            elementName: 'ValueReference',
            typeInfo: 'String'
          }, {
            name: 'expression',
            elementName: 'expression',
            typeInfo: 'AnyType',
            type: 'elementRef'
          }, {
            name: 'any',
            allowTypedObject: true,
            type: 'anyElement'
          }]
      }, {
        type: 'classInfo',
        localName: 'TemporalOpsType',
        propertyInfos: []
      }, {
        type: 'classInfo',
        localName: 'BinaryLogicOpType',
        baseTypeInfo: 'Filter_2_0.LogicOpsType',
        propertyInfos: [{
            name: 'comparisonOpsOrSpatialOpsOrTemporalOps',
            collection: true,
            elementTypeInfos: [{
                elementName: 'extensionOps',
                typeInfo: 'Filter_2_0.ExtensionOpsType'
              }, {
                elementName: 'temporalOps',
                typeInfo: 'Filter_2_0.TemporalOpsType'
              }, {
                elementName: 'logicOps',
                typeInfo: 'Filter_2_0.LogicOpsType'
              }, {
                elementName: 'comparisonOps',
                typeInfo: 'Filter_2_0.ComparisonOpsType'
              }, {
                elementName: '_Id',
                typeInfo: 'Filter_2_0.AbstractIdType'
              }, {
                elementName: 'spatialOps',
                typeInfo: 'Filter_2_0.SpatialOpsType'
              }, {
                elementName: 'Function',
                typeInfo: 'Filter_2_0.FunctionType'
              }],
            type: 'elementRefs'
          }]
      }, {
        type: 'classInfo',
        localName: 'LogicOpsType',
        propertyInfos: []
      }, {
        type: 'classInfo',
        localName: 'ComparisonOpsType',
        propertyInfos: []
      }, {
        type: 'classInfo',
        localName: 'LiteralType',
        propertyInfos: [{
            name: 'content',
            collection: true,
            allowTypedObject: true,
            mixed: true,
            type: 'anyElement'
          }, {
            name: 'type',
            typeInfo: 'String',
            attributeName: 'type',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'BinarySpatialOpType',
        baseTypeInfo: 'Filter_2_0.SpatialOpsType',
        propertyInfos: [{
            type: 'element',
            name: 'valueReference',
            elementName: 'ValueReference',
            typeInfo: 'String'
          }, {
            name: 'expression',
            elementName: 'expression',
            typeInfo: 'AnyType',
            type: 'elementRef'
          }, {
            name: 'any',
            allowTypedObject: true,
            type: 'anyElement'
          }]
      }, {
        type: 'classInfo',
        localName: 'SpatialOpsType',
        propertyInfos: []
      }, {
        type: 'classInfo',
        localName: 'AbstractQueryExpressionType',
        propertyInfos: [{
            name: 'handle',
            typeInfo: 'String',
            attributeName: 'handle',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'PropertyIsLikeType',
        baseTypeInfo: 'Filter_2_0.ComparisonOpsType',
        propertyInfos: [{
            name: 'expression',
            collection: true,
            elementName: 'expression',
            typeInfo: 'AnyType',
            type: 'elementRef'
          }, {
            name: 'wildCard',
            typeInfo: 'String',
            attributeName: 'wildCard',
            type: 'attribute'
          }, {
            name: 'singleChar',
            typeInfo: 'String',
            attributeName: 'singleChar',
            type: 'attribute'
          }, {
            name: 'escapeChar',
            typeInfo: 'String',
            attributeName: 'escapeChar',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'LogicalOperators',
        propertyInfos: []
      }, {
        type: 'classInfo',
        localName: 'UnaryLogicOpType',
        baseTypeInfo: 'Filter_2_0.LogicOpsType',
        propertyInfos: [{
            name: 'comparisonOps',
            elementName: 'comparisonOps',
            typeInfo: 'Filter_2_0.ComparisonOpsType',
            type: 'elementRef'
          }, {
            name: 'spatialOps',
            elementName: 'spatialOps',
            typeInfo: 'Filter_2_0.SpatialOpsType',
            type: 'elementRef'
          }, {
            name: 'temporalOps',
            elementName: 'temporalOps',
            typeInfo: 'Filter_2_0.TemporalOpsType',
            type: 'elementRef'
          }, {
            name: 'logicOps',
            elementName: 'logicOps',
            typeInfo: 'Filter_2_0.LogicOpsType',
            type: 'elementRef'
          }, {
            type: 'element',
            name: 'extensionOps',
            elementName: 'extensionOps',
            typeInfo: 'Filter_2_0.ExtensionOpsType'
          }, {
            type: 'element',
            name: 'function',
            elementName: 'Function',
            typeInfo: 'Filter_2_0.FunctionType'
          }, {
            name: 'id',
            collection: true,
            elementName: '_Id',
            typeInfo: 'Filter_2_0.AbstractIdType',
            type: 'elementRef'
          }]
      }, {
        type: 'classInfo',
        localName: 'PropertyIsNullType',
        baseTypeInfo: 'Filter_2_0.ComparisonOpsType',
        propertyInfos: [{
            name: 'expression',
            elementName: 'expression',
            typeInfo: 'AnyType',
            type: 'elementRef'
          }]
      }, {
        type: 'classInfo',
        localName: 'BBOXType',
        baseTypeInfo: 'Filter_2_0.SpatialOpsType',
        propertyInfos: [{
            name: 'expression',
            elementName: 'expression',
            typeInfo: 'AnyType',
            type: 'elementRef'
          }, {
            name: 'any',
            allowTypedObject: true,
            type: 'anyElement'
          }]
      }, {
        type: 'classInfo',
        localName: 'PropertyIsNilType',
        baseTypeInfo: 'Filter_2_0.ComparisonOpsType',
        propertyInfos: [{
            name: 'expression',
            elementName: 'expression',
            typeInfo: 'AnyType',
            type: 'elementRef'
          }, {
            name: 'nilReason',
            typeInfo: 'String',
            attributeName: 'nilReason',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'BinaryComparisonOpType',
        baseTypeInfo: 'Filter_2_0.ComparisonOpsType',
        propertyInfos: [{
            name: 'expression',
            collection: true,
            elementName: 'expression',
            typeInfo: 'AnyType',
            type: 'elementRef'
          }, {
            name: 'matchCase',
            typeInfo: 'Boolean',
            attributeName: 'matchCase',
            type: 'attribute'
          }, {
            name: 'matchAction',
            typeInfo: 'String',
            attributeName: 'matchAction',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'SortByType',
        propertyInfos: [{
            type: 'element',
            name: 'sortProperty',
            collection: true,
            elementName: 'SortProperty',
            typeInfo: 'Filter_2_0.SortPropertyType'
          }]
      }, {
        type: 'classInfo',
        localName: 'DistanceBufferType',
        baseTypeInfo: 'Filter_2_0.SpatialOpsType',
        propertyInfos: [{
            name: 'expression',
            elementName: 'expression',
            typeInfo: 'AnyType',
            type: 'elementRef'
          }, {
            name: 'any',
            allowTypedObject: true,
            type: 'anyElement'
          }, {
            type: 'element',
            name: 'distance',
            elementName: 'Distance',
            typeInfo: 'Filter_2_0.MeasureType'
          }]
      }, {
        type: 'classInfo',
        localName: 'ExtensionOpsType',
        propertyInfos: []
      }, {
        type: 'classInfo',
        localName: 'FunctionType',
        propertyInfos: [{
            name: 'expression',
            collection: true,
            elementName: 'expression',
            typeInfo: 'AnyType',
            type: 'elementRef'
          }, {
            name: 'name',
            typeInfo: 'String',
            attributeName: 'name',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'PropertyIsBetweenType',
        baseTypeInfo: 'Filter_2_0.ComparisonOpsType',
        propertyInfos: [{
            name: 'expression',
            elementName: 'expression',
            typeInfo: 'AnyType',
            type: 'elementRef'
          }, {
            type: 'element',
            name: 'lowerBoundary',
            elementName: 'LowerBoundary',
            typeInfo: 'Filter_2_0.LowerBoundaryType'
          }, {
            type: 'element',
            name: 'upperBoundary',
            elementName: 'UpperBoundary',
            typeInfo: 'Filter_2_0.UpperBoundaryType'
          }]
      }, {
        type: 'classInfo',
        localName: 'AbstractIdType',
        propertyInfos: []
      }, {
        type: 'classInfo',
        localName: 'FilterCapabilities',
        propertyInfos: [{
            type: 'element',
            name: 'conformance',
            elementName: 'Conformance',
            typeInfo: 'Filter_2_0.ConformanceType'
          }, {
            type: 'element',
            name: 'idCapabilities',
            elementName: 'Id_Capabilities',
            typeInfo: 'Filter_2_0.IdCapabilitiesType'
          }, {
            type: 'element',
            name: 'scalarCapabilities',
            elementName: 'Scalar_Capabilities',
            typeInfo: 'Filter_2_0.ScalarCapabilitiesType'
          }, {
            type: 'element',
            name: 'spatialCapabilities',
            elementName: 'Spatial_Capabilities',
            typeInfo: 'Filter_2_0.SpatialCapabilitiesType'
          }, {
            type: 'element',
            name: 'temporalCapabilities',
            elementName: 'Temporal_Capabilities',
            typeInfo: 'Filter_2_0.TemporalCapabilitiesType'
          }, {
            type: 'element',
            name: 'functions',
            elementName: 'Functions',
            typeInfo: 'Filter_2_0.AvailableFunctionsType'
          }, {
            type: 'element',
            name: 'extendedCapabilities',
            elementName: 'Extended_Capabilities',
            typeInfo: 'Filter_2_0.ExtendedCapabilitiesType'
          }]
      }, {
        type: 'classInfo',
        localName: 'ConformanceType',
        propertyInfos: [{
            type: 'element',
            name: 'constraint',
            collection: true,
            elementName: 'Constraint',
            typeInfo: 'OWS_1_1_0.DomainType'
          }]
      }, {
        type: 'classInfo',
        localName: 'IdCapabilitiesType',
        propertyInfos: [{
            type: 'element',
            name: 'resourceIdentifier',
            collection: true,
            elementName: 'ResourceIdentifier',
            typeInfo: 'Filter_2_0.ResourceIdentifierType'
          }]
      }, {
        type: 'classInfo',
        localName: 'ScalarCapabilitiesType',
        propertyInfos: [{
            type: 'element',
            name: 'logicalOperators',
            elementName: 'LogicalOperators',
            typeInfo: 'Filter_2_0.LogicalOperators'
          }, {
            type: 'element',
            name: 'comparisonOperators',
            elementName: 'ComparisonOperators',
            typeInfo: 'Filter_2_0.ComparisonOperatorsType'
          }]
      }, {
        type: 'classInfo',
        localName: 'SpatialCapabilitiesType',
        propertyInfos: [{
            type: 'element',
            name: 'geometryOperands',
            elementName: 'GeometryOperands',
            typeInfo: 'Filter_2_0.GeometryOperandsType'
          }, {
            type: 'element',
            name: 'spatialOperators',
            elementName: 'SpatialOperators',
            typeInfo: 'Filter_2_0.SpatialOperatorsType'
          }]
      }, {
        type: 'classInfo',
        localName: 'TemporalCapabilitiesType',
        propertyInfos: [{
            type: 'element',
            name: 'temporalOperands',
            elementName: 'TemporalOperands',
            typeInfo: 'Filter_2_0.TemporalOperandsType'
          }, {
            type: 'element',
            name: 'temporalOperators',
            elementName: 'TemporalOperators',
            typeInfo: 'Filter_2_0.TemporalOperatorsType'
          }]
      }, {
        type: 'classInfo',
        localName: 'AvailableFunctionsType',
        propertyInfos: [{
            type: 'element',
            name: 'function',
            collection: true,
            elementName: 'Function',
            typeInfo: 'Filter_2_0.AvailableFunctionType'
          }]
      }, {
        type: 'classInfo',
        localName: 'ExtendedCapabilitiesType',
        propertyInfos: [{
            type: 'element',
            name: 'additionalOperators',
            elementName: 'AdditionalOperators',
            typeInfo: 'Filter_2_0.AdditionalOperatorsType'
          }]
      }, {
        type: 'classInfo',
        localName: 'AbstractAdhocQueryExpressionType',
        baseTypeInfo: 'Filter_2_0.AbstractQueryExpressionType',
        propertyInfos: [{
            type: 'element',
            name: 'abstractProjectionClause',
            collection: true,
            elementName: 'AbstractProjectionClause',
            typeInfo: 'AnyType'
          }, {
            name: 'abstractSelectionClause',
            elementName: 'AbstractSelectionClause',
            typeInfo: 'AnyType',
            type: 'elementRef'
          }, {
            name: 'abstractSortingClause',
            elementName: 'AbstractSortingClause',
            typeInfo: 'AnyType',
            type: 'elementRef'
          }, {
            name: 'typeNames',
            typeInfo: {
              type: 'list',
              typeInfo: 'String'
            },
            attributeName: 'typeNames',
            type: 'attribute'
          }, {
            name: 'aliases',
            typeInfo: {
              type: 'list',
              typeInfo: 'String'
            },
            attributeName: 'aliases',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'FilterType',
        baseTypeInfo: 'Filter_2_0.AbstractSelectionClauseType',
        propertyInfos: [{
            name: 'comparisonOps',
            elementName: 'comparisonOps',
            typeInfo: 'Filter_2_0.ComparisonOpsType',
            type: 'elementRef'
          }, {
            name: 'spatialOps',
            elementName: 'spatialOps',
            typeInfo: 'Filter_2_0.SpatialOpsType',
            type: 'elementRef'
          }, {
            name: 'temporalOps',
            elementName: 'temporalOps',
            typeInfo: 'Filter_2_0.TemporalOpsType',
            type: 'elementRef'
          }, {
            name: 'logicOps',
            elementName: 'logicOps',
            typeInfo: 'Filter_2_0.LogicOpsType',
            type: 'elementRef'
          }, {
            type: 'element',
            name: 'extensionOps',
            elementName: 'extensionOps',
            typeInfo: 'Filter_2_0.ExtensionOpsType'
          }, {
            type: 'element',
            name: 'function',
            elementName: 'Function',
            typeInfo: 'Filter_2_0.FunctionType'
          }, {
            name: 'id',
            collection: true,
            elementName: '_Id',
            typeInfo: 'Filter_2_0.AbstractIdType',
            type: 'elementRef'
          }]
      }, {
        type: 'classInfo',
        localName: 'ResourceIdType',
        baseTypeInfo: 'Filter_2_0.AbstractIdType',
        propertyInfos: [{
            name: 'rid',
            typeInfo: 'String',
            attributeName: 'rid',
            type: 'attribute'
          }, {
            name: 'previousRid',
            typeInfo: 'String',
            attributeName: 'previousRid',
            type: 'attribute'
          }, {
            name: 'version',
            typeInfo: 'String',
            attributeName: 'version',
            type: 'attribute'
          }, {
            name: 'startDate',
            typeInfo: 'Calendar',
            attributeName: 'startDate',
            type: 'attribute'
          }, {
            name: 'endDate',
            typeInfo: 'Calendar',
            attributeName: 'endDate',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'ArgumentType',
        propertyInfos: [{
            type: 'element',
            name: 'metadata',
            elementName: {
              localPart: 'Metadata',
              namespaceURI: 'http:\/\/www.opengis.net\/ows\/1.1'
            },
            typeInfo: 'OWS_1_1_0.MetadataType'
          }, {
            type: 'element',
            name: 'type',
            elementName: 'Type',
            typeInfo: 'String'
          }, {
            name: 'name',
            typeInfo: 'String',
            attributeName: 'name',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'AbstractSortingClauseType',
        propertyInfos: []
      }, {
        type: 'classInfo',
        localName: 'SpatialOperatorsType',
        propertyInfos: [{
            type: 'element',
            name: 'spatialOperator',
            collection: true,
            elementName: 'SpatialOperator',
            typeInfo: 'Filter_2_0.SpatialOperatorType'
          }]
      }, {
        type: 'classInfo',
        localName: 'TemporalOperatorsType',
        propertyInfos: [{
            type: 'element',
            name: 'temporalOperator',
            collection: true,
            elementName: 'TemporalOperator',
            typeInfo: 'Filter_2_0.TemporalOperatorType'
          }]
      }, {
        type: 'classInfo',
        localName: 'ComparisonOperatorType',
        propertyInfos: [{
            name: 'name',
            typeInfo: 'String',
            attributeName: 'name',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'ExtensionOperatorType',
        propertyInfos: [{
            name: 'name',
            typeInfo: 'String',
            attributeName: 'name',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'SpatialOperatorType',
        propertyInfos: [{
            type: 'element',
            name: 'geometryOperands',
            elementName: 'GeometryOperands',
            typeInfo: 'Filter_2_0.GeometryOperandsType'
          }, {
            name: 'name',
            typeInfo: 'String',
            attributeName: 'name',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'UpperBoundaryType',
        propertyInfos: [{
            name: 'expression',
            elementName: 'expression',
            typeInfo: 'AnyType',
            type: 'elementRef'
          }]
      }, {
        type: 'classInfo',
        localName: 'TemporalOperatorType',
        propertyInfos: [{
            type: 'element',
            name: 'temporalOperands',
            elementName: 'TemporalOperands',
            typeInfo: 'Filter_2_0.TemporalOperandsType'
          }, {
            name: 'name',
            typeInfo: 'String',
            attributeName: 'name',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'AbstractSelectionClauseType',
        propertyInfos: []
      }, {
        type: 'classInfo',
        localName: 'TemporalOperandsType',
        propertyInfos: [{
            type: 'element',
            name: 'temporalOperand',
            collection: true,
            elementName: 'TemporalOperand',
            typeInfo: 'Filter_2_0.TemporalOperandsType.TemporalOperand'
          }]
      }, {
        type: 'classInfo',
        localName: 'AvailableFunctionType',
        propertyInfos: [{
            type: 'element',
            name: 'metadata',
            elementName: {
              localPart: 'Metadata',
              namespaceURI: 'http:\/\/www.opengis.net\/ows\/1.1'
            },
            typeInfo: 'OWS_1_1_0.MetadataType'
          }, {
            type: 'element',
            name: 'returns',
            elementName: 'Returns',
            typeInfo: 'String'
          }, {
            type: 'element',
            name: 'arguments',
            elementName: 'Arguments',
            typeInfo: 'Filter_2_0.ArgumentsType'
          }, {
            name: 'name',
            typeInfo: 'String',
            attributeName: 'name',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'MeasureType',
        propertyInfos: [{
            name: 'value',
            typeInfo: 'Double',
            type: 'value'
          }, {
            name: 'uom',
            typeInfo: 'String',
            attributeName: 'uom',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'ResourceIdentifierType',
        propertyInfos: [{
            type: 'element',
            name: 'metadata',
            elementName: {
              localPart: 'Metadata',
              namespaceURI: 'http:\/\/www.opengis.net\/ows\/1.1'
            },
            typeInfo: 'OWS_1_1_0.MetadataType'
          }, {
            name: 'name',
            typeInfo: 'String',
            attributeName: 'name',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'AdditionalOperatorsType',
        propertyInfos: [{
            type: 'element',
            name: 'operator',
            collection: true,
            elementName: 'Operator',
            typeInfo: 'Filter_2_0.ExtensionOperatorType'
          }]
      }, {
        type: 'classInfo',
        localName: 'GeometryOperandsType',
        propertyInfos: [{
            type: 'element',
            name: 'geometryOperand',
            collection: true,
            elementName: 'GeometryOperand',
            typeInfo: 'Filter_2_0.GeometryOperandsType.GeometryOperand'
          }]
      }, {
        type: 'classInfo',
        localName: 'SortPropertyType',
        propertyInfos: [{
            type: 'element',
            name: 'valueReference',
            elementName: 'ValueReference',
            typeInfo: 'String'
          }, {
            type: 'element',
            name: 'sortOrder',
            elementName: 'SortOrder',
            typeInfo: 'String'
          }]
      }, {
        type: 'classInfo',
        localName: 'ArgumentsType',
        propertyInfos: [{
            type: 'element',
            name: 'argument',
            collection: true,
            elementName: 'Argument',
            typeInfo: 'Filter_2_0.ArgumentType'
          }]
      }, {
        type: 'classInfo',
        localName: 'AbstractProjectionClauseType',
        propertyInfos: []
      }, {
        type: 'classInfo',
        localName: 'ComparisonOperatorsType',
        propertyInfos: [{
            type: 'element',
            name: 'comparisonOperator',
            collection: true,
            elementName: 'ComparisonOperator',
            typeInfo: 'Filter_2_0.ComparisonOperatorType'
          }]
      }, {
        type: 'classInfo',
        localName: 'LowerBoundaryType',
        propertyInfos: [{
            name: 'expression',
            elementName: 'expression',
            typeInfo: 'AnyType',
            type: 'elementRef'
          }]
      }, {
        type: 'classInfo',
        localName: 'GeometryOperandsType.GeometryOperand',
        propertyInfos: [{
            name: 'name',
            typeInfo: 'String',
            attributeName: 'name',
            type: 'attribute'
          }]
      }, {
        type: 'classInfo',
        localName: 'TemporalOperandsType.TemporalOperand',
        propertyInfos: [{
            name: 'name',
            typeInfo: 'String',
            attributeName: 'name',
            type: 'attribute'
          }]
      }, {
        type: 'enumInfo',
        localName: 'MatchActionType',
        baseTypeInfo: 'String',
        values: ['All', 'Any', 'One']
      }, {
        type: 'enumInfo',
        localName: 'SortOrderType',
        baseTypeInfo: 'String',
        values: ['DESC', 'ASC']
      }, {
        type: 'enumInfo',
        localName: 'VersionActionTokens',
        baseTypeInfo: 'String',
        values: ['FIRST', 'LAST', 'PREVIOUS', 'NEXT', 'ALL']
      }],
    elementInfos: [{
        elementName: 'LogicalOperators',
        typeInfo: 'Filter_2_0.LogicalOperators'
      }, {
        elementName: 'Filter_Capabilities',
        typeInfo: 'Filter_2_0.FilterCapabilities'
      }, {
        elementName: 'AbstractProjectionClause',
        typeInfo: 'AnyType'
      }, {
        elementName: 'expression',
        typeInfo: 'AnyType'
      }, {
        elementName: 'TOverlaps',
        typeInfo: 'Filter_2_0.BinaryTemporalOpType',
        substitutionHead: 'temporalOps'
      }, {
        elementName: 'EndedBy',
        typeInfo: 'Filter_2_0.BinaryTemporalOpType',
        substitutionHead: 'temporalOps'
      }, {
        elementName: 'AbstractSelectionClause',
        typeInfo: 'AnyType'
      }, {
        elementName: 'AnyInteracts',
        typeInfo: 'Filter_2_0.BinaryTemporalOpType',
        substitutionHead: 'temporalOps'
      }, {
        elementName: 'TContains',
        typeInfo: 'Filter_2_0.BinaryTemporalOpType',
        substitutionHead: 'temporalOps'
      }, {
        elementName: 'AbstractAdhocQueryExpression',
        typeInfo: 'Filter_2_0.AbstractAdhocQueryExpressionType',
        substitutionHead: 'AbstractQueryExpression'
      }, {
        elementName: 'Equals',
        typeInfo: 'Filter_2_0.BinarySpatialOpType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: 'Filter',
        typeInfo: 'Filter_2_0.FilterType',
        substitutionHead: 'AbstractSelectionClause'
      }, {
        elementName: 'ResourceId',
        typeInfo: 'Filter_2_0.ResourceIdType',
        substitutionHead: '_Id'
      }, {
        elementName: 'PropertyIsNotEqualTo',
        typeInfo: 'Filter_2_0.BinaryComparisonOpType',
        substitutionHead: 'comparisonOps'
      }, {
        elementName: 'PropertyIsLessThan',
        typeInfo: 'Filter_2_0.BinaryComparisonOpType',
        substitutionHead: 'comparisonOps'
      }, {
        elementName: 'Within',
        typeInfo: 'Filter_2_0.BinarySpatialOpType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: 'After',
        typeInfo: 'Filter_2_0.BinaryTemporalOpType',
        substitutionHead: 'temporalOps'
      }, {
        elementName: 'logicOps',
        typeInfo: 'Filter_2_0.LogicOpsType'
      }, {
        elementName: 'Before',
        typeInfo: 'Filter_2_0.BinaryTemporalOpType',
        substitutionHead: 'temporalOps'
      }, {
        elementName: 'Overlaps',
        typeInfo: 'Filter_2_0.BinarySpatialOpType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: 'PropertyIsLessThanOrEqualTo',
        typeInfo: 'Filter_2_0.BinaryComparisonOpType',
        substitutionHead: 'comparisonOps'
      }, {
        elementName: 'spatialOps',
        typeInfo: 'Filter_2_0.SpatialOpsType'
      }, {
        elementName: 'SortBy',
        typeInfo: 'Filter_2_0.SortByType',
        substitutionHead: 'AbstractSortingClause'
      }, {
        elementName: 'Beyond',
        typeInfo: 'Filter_2_0.DistanceBufferType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: 'extensionOps',
        typeInfo: 'Filter_2_0.ExtensionOpsType'
      }, {
        elementName: 'AbstractSortingClause',
        typeInfo: 'AnyType'
      }, {
        elementName: 'During',
        typeInfo: 'Filter_2_0.BinaryTemporalOpType',
        substitutionHead: 'temporalOps'
      }, {
        elementName: 'Function',
        typeInfo: 'Filter_2_0.FunctionType',
        substitutionHead: 'expression'
      }, {
        elementName: 'PropertyIsGreaterThanOrEqualTo',
        typeInfo: 'Filter_2_0.BinaryComparisonOpType',
        substitutionHead: 'comparisonOps'
      }, {
        elementName: 'Crosses',
        typeInfo: 'Filter_2_0.BinarySpatialOpType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: 'Begins',
        typeInfo: 'Filter_2_0.BinaryTemporalOpType',
        substitutionHead: 'temporalOps'
      }, {
        elementName: 'PropertyIsEqualTo',
        typeInfo: 'Filter_2_0.BinaryComparisonOpType',
        substitutionHead: 'comparisonOps'
      }, {
        elementName: 'DWithin',
        typeInfo: 'Filter_2_0.DistanceBufferType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: 'Disjoint',
        typeInfo: 'Filter_2_0.BinarySpatialOpType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: '_Id',
        typeInfo: 'Filter_2_0.AbstractIdType'
      }, {
        elementName: 'PropertyIsBetween',
        typeInfo: 'Filter_2_0.PropertyIsBetweenType',
        substitutionHead: 'comparisonOps'
      }, {
        elementName: 'MetBy',
        typeInfo: 'Filter_2_0.BinaryTemporalOpType',
        substitutionHead: 'temporalOps'
      }, {
        elementName: 'BegunBy',
        typeInfo: 'Filter_2_0.BinaryTemporalOpType',
        substitutionHead: 'temporalOps'
      }, {
        elementName: 'PropertyIsLike',
        typeInfo: 'Filter_2_0.PropertyIsLikeType',
        substitutionHead: 'comparisonOps'
      }, {
        elementName: 'PropertyIsNull',
        typeInfo: 'Filter_2_0.PropertyIsNullType',
        substitutionHead: 'comparisonOps'
      }, {
        elementName: 'Not',
        typeInfo: 'Filter_2_0.UnaryLogicOpType',
        substitutionHead: 'logicOps'
      }, {
        elementName: 'PropertyIsNil',
        typeInfo: 'Filter_2_0.PropertyIsNilType',
        substitutionHead: 'comparisonOps'
      }, {
        elementName: 'BBOX',
        typeInfo: 'Filter_2_0.BBOXType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: 'And',
        typeInfo: 'Filter_2_0.BinaryLogicOpType',
        substitutionHead: 'logicOps'
      }, {
        elementName: 'Ends',
        typeInfo: 'Filter_2_0.BinaryTemporalOpType',
        substitutionHead: 'temporalOps'
      }, {
        elementName: 'Contains',
        typeInfo: 'Filter_2_0.BinarySpatialOpType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: 'PropertyIsGreaterThan',
        typeInfo: 'Filter_2_0.BinaryComparisonOpType',
        substitutionHead: 'comparisonOps'
      }, {
        elementName: 'Meets',
        typeInfo: 'Filter_2_0.BinaryTemporalOpType',
        substitutionHead: 'temporalOps'
      }, {
        elementName: 'Or',
        typeInfo: 'Filter_2_0.BinaryLogicOpType',
        substitutionHead: 'logicOps'
      }, {
        elementName: 'comparisonOps',
        typeInfo: 'Filter_2_0.ComparisonOpsType'
      }, {
        elementName: 'TEquals',
        typeInfo: 'Filter_2_0.BinaryTemporalOpType',
        substitutionHead: 'temporalOps'
      }, {
        elementName: 'Literal',
        typeInfo: 'Filter_2_0.LiteralType',
        substitutionHead: 'expression'
      }, {
        elementName: 'Intersects',
        typeInfo: 'Filter_2_0.BinarySpatialOpType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: 'temporalOps',
        typeInfo: 'Filter_2_0.TemporalOpsType'
      }, {
        elementName: 'Touches',
        typeInfo: 'Filter_2_0.BinarySpatialOpType',
        substitutionHead: 'spatialOps'
      }, {
        elementName: 'OverlappedBy',
        typeInfo: 'Filter_2_0.BinaryTemporalOpType',
        substitutionHead: 'temporalOps'
      }, {
        elementName: 'AbstractQueryExpression',
        typeInfo: 'Filter_2_0.AbstractQueryExpressionType'
      }, {
        elementName: 'ValueReference',
        typeInfo: 'String',
        substitutionHead: 'expression'
      }]
  };
  return {
    Filter_2_0: Filter_2_0
  };
};
if (typeof define === 'function' && define.amd) {
  define([], Filter_2_0_Module_Factory);
}
else {
  if (typeof module !== 'undefined' && module.exports) {
    module.exports.Filter_2_0 = Filter_2_0_Module_Factory().Filter_2_0;
  }
  else {
    var Filter_2_0 = Filter_2_0_Module_Factory().Filter_2_0;
  }
}